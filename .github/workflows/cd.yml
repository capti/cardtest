name: CD

on:
  push:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        cd frontend && flutter pub get
    
    - name: Build Android APK
      run: |
        cd frontend && flutter build apk --release
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: frontend/build/app/outputs/flutter-apk/app-release.apk

  backend:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: cd backend && chmod +x gradlew
      
    - name: Set up PostgreSQL
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '14'
        postgresql db: ${{ secrets.POSTGRES_DB }}
        postgresql user: ${{ secrets.POSTGRES_USER }}
        postgresql password: ${{ secrets.POSTGRES_PASSWORD }}

    - name: Export DB secrets to environment
      run: |
        echo "DB_HOST=localhost" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DB_NAME=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
        echo "DB_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV

    - name: Build with Gradle
      run: |
        cd backend && ./gradlew build
    
    - name: Build Docker image
      run: |
        cd backend && docker build -t cardly-backend .
    
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/build/libs 
