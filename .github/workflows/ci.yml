name: CI

on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        cd frontend && flutter pub get
    
    - name: Run Flutter analyze
      run: |
        cd frontend
        flutter analyze | grep "error â€¢" && exit 1 || exit 0
    
    - name: Run Flutter tests
      run: |
        cd frontend && flutter test

  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up PostgreSQL
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '14'
        postgresql db: ${{ secrets.POSTGRES_DB }}
        postgresql user: ${{ secrets.POSTGRES_USER }}
        postgresql password: ${{ secrets.POSTGRES_PASSWORD }}

    - name: Export DB secrets to environment
      run: |
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: cd backend && chmod +x gradlew
    
    - name: Build with Gradle
      run: |
        cd backend && ./gradlew build
    
    - name: Run tests
      run: |
        cd backend && ./gradlew test 
